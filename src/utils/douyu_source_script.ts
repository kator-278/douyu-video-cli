// @ts-ignore
import CryptoJS from "crypto-js";

// @ts-ignore
global.CryptoJS = CryptoJS;

var vdwdae325w_64we = "220320240205";
var ud22bbed1d6b = [
  0x88a5c0a6, 0x53584990, 0x893b758a, 0xd7889396, 0x9851a3aa, 0xfbceae91,
  0x2b74c90f, 0x137a4217, 0xba517e33, 0x31dc5bd9, 0xaf1783c1, 0x7a594667,
  0x1f81608f, 0x4f860900, 0xe8db4877, 0xb380c15e, 0x1db47d63, 0x1be742e4,
  0xa2132083, 0xd32646b0, 0x547ba1b5, 0x3ccdda38, 0x228cb3e, 0x44c46cf0,
  0xc1a1e5bd, 0x4be232ae, 0xa1f85216, 0x974b537d, 0x2b10e62d, 0xb60901d5,
  0x894e415, 0x7e69fdac, 0x527e8cb7, 0x9300726e, 0xe382f761, 0x20fc826d,
  0x64d0fbc8, 0xee6835e1, 0x98278b10, 0x8c5c20, 0x472b7718, 0x73bae1e2,
  0xd077cc7b, 0x54a3d3a9, 0xa5310bf3, 0x814905ec, 0xb8756149, 0xfb072d9f,
  0xa3f46d1a, 0xd8223347, 0x36c73c00, 0x4e4584dc, 0x5ab4014b, 0xf26660f2,
  0x86548177, 0xe0de8f01, 0xe7e749f8, 0x402c1c8d, 0x1bfcff89, 0x7f54dc24,
  0xbd55ad9e, 0xf5261e5, 0xea6cc440, 0xaa521d5f, 0x9926e464, 0x306d79da,
  0xd38827d6, 0xefc48d4e, 0x2589880f, 0x7fd92279, 0x11fd9512, 0x8e279a81,
  0xcc8a16a4, 0xf2b8a804, 0x2da59837, 0x26285cdb, 0x3d2c62da, 0xb014837f,
  0x919c9da3, 0x1c96427, 0xee490617, 0x872ca69c, 0xcf1847dd, 0xd297aa82,
  0x2339cb23, 0x59eaa291, 0x89a35c5a, 0x2278d1b0, 0xe8304174, 0x1d041048,
  0x59fa30c6, 0xf6dc48d4, 0x37b8e972, 0xb46cabff, 0x378d749b, 0x38709213,
  0x23b70d3e, 0x168c0230, 0x6c11f1a4, 0x4827c730, 0xc05c6b49, 0x953a1f12,
  0xd1d98c0a, 0x1cd59576, 0x5a748d5e, 0xcac29f1, 0x4b92422f, 0x40359808,
  0x2ebf9971, 0x67ed5f55, 0x403c603d, 0x979bda14, 0x1a509e2d, 0x84dc2053,
  0x53b38e8, 0xe1915986, 0x210754a, 0xbe3df605, 0x8b895734, 0xa01994aa,
  0x75eea756, 0x9581fb50, 0x876a69ae, 0x86aa5630, 0x8c8ef1e0, 0x55325cc6,
  0x2f101fd6, 0x54a03289, 0x9e17d40b, 0xe8d71781, 0x6d152746, 0x781dc65,
  0x55959003, 0x5281d1fe, 0xb2b6a78c, 0xf5154e72, 0xee6abd7e, 0xd67b8451,
  0xe160e240, 0x287e9048, 0xddacba1b, 0xb4df5448, 0xcb61ec4e, 0xf84e50d5,
  0xd517865b, 0xd1a9527e, 0x98043dd, 0xce2e4c28, 0xd956cf24, 0xa7040b76,
  0x273ff444, 0xf0b201ae, 0xc461654a, 0x2b69f650, 0x30b2c0c3, 0x9aa7f190,
  0xc98ee156, 0x83e3a477, 0x613ff197, 0x5a9c1573, 0xbbe66588, 0x23ce209e,
  0x2273bfe5, 0x8877fe7c, 0x2a821dd5, 0x461599f1, 0xd9950138, 0x75b99bce,
  0x4bd9c89f, 0x93f229bc, 0x8f5ccba3, 0x91064026, 0xf9230693, 0x705e5307,
  0x288e1c7f, 0xf435e0c6, 0x9fa62e03, 0x406649d7, 0x817204a2, 0xde6a1831,
  0x3df153d8, 0x61986927, 0x93df217e, 0x6f69dce2, 0x502742af, 0xc90a72e,
  0x2839cbab, 0x3581de86, 0x582d08bb, 0x4c5e0b92, 0xd187a11f, 0xf8cd8e5f,
  0xcb8c08c3, 0x91fd252f, 0x601bc7b, 0x1ee415c1, 0xc1daed32, 0xcff46d1f,
  0x7009aa3a, 0xf52629b8, 0x11309347, 0xcb96684d, 0x30a7619d, 0x83d42af6,
  0x9677efdd, 0x6d1af8fb, 0x3fb08a5f, 0x13cfad30, 0x980b1f56, 0xe9207396,
  0xf6f5f27a, 0xcc75dad2, 0xf496dcba, 0x955e3def, 0x970d52d2, 0xedf0049a,
  0x88419cdd, 0x91251a1b, 0xb82834b5, 0x5c101fae, 0x3e814da7, 0xd464b02b,
  0x67802b92, 0x938a3991, 0x8a1b4cba, 0x979241a2, 0x4052a18f, 0xa133d6d0,
  0x292fb80b, 0xaeee8a95, 0xcde90b82, 0x3a4e51e8, 0x72a277e0, 0xe7a88614,
  0x2245078, 0x69a84e47, 0x62fc2e1a, 0x6704bba7, 0x7086d143, 0x6bd8e422,
  0xe8d6751a, 0xc9b18d2e, 0xde3fd42b, 0xbf8e33e9, 0x791a3335, 0x602bb712,
  0xbb4e821, 0xc1a0f062, 0x8079273f, 0x684bca56, 0x6b33c710, 0xd2b3c2b6,
  0x63af46b3, 0x81108ab6, 0x11333d4f, 0x707fe1df, 0x77246fac, 0x93244a8a,
  0x70e3341d, 0x8d6c88fa, 0xb750b1b, 0x5b069080, 0x2068ea37, 0x3049a10e,
  0xb51da0f8, 0x727c6629, 0xcaa4a61e, 0x3801e631, 0x5405780d, 0x5f481a51,
  0x794b3441, 0xdecd1e62, 0xe787c02c, 0xcce9e85e, 0x10e5d554, 0xfbd3f371,
  0x9ce44af6, 0x3a9333fd, 0xc961859c, 0xa19902b6, 0xe06781bb, 0x6a869793,
  0x31539cf7, 0x1221553d, 0xe4a08b20, 0xc9e12d6c, 0xc9e72ba4, 0xa6c97f7a,
  0x749ad0b3, 0x82af0c8e, 0x96d2bc02, 0x2cdcf931, 0xb6ff8bfa, 0xf1c20f6e,
  0x9b350535, 0xd4d187be, 0x5155825f, 0x29da3724, 0xc3b85051, 0x48a37032,
  0xa7d391fd, 0x25ff212a, 0x1a0fa1ed, 0x9578d5c3, 0x3873fe72, 0xab4afc3a,
  0xaea3ea3f, 0x3cc4e9f6, 0x7552be8b, 0x453d1672, 0x29e7c901, 0x5da45c8e,
  0x844c59f, 0xe889bf06, 0x13771f60, 0x1e9a8231, 0x36297eac, 0xd27582e4,
  0xcceffc54, 0xe0c20fa9, 0xc1a4e9b6, 0xe6299530, 0x1a9ebee1, 0x17a69e3c,
  0x318477da, 0x67897196, 0xcf4f84b3, 0xb583a671, 0x1228931, 0xb3debe1c,
  0x6646cf58, 0x6fad57ad, 0x8b18ecce, 0xbb893f2e, 0x86dfc65b, 0x2b4054ee,
  0xe7ee5ef1, 0x4ac81c13, 0xc439d593, 0x5a06724f, 0x6319c45c, 0xf88b4ce1,
  0x8a076045, 0x1ae71323, 0x28272469, 0x72ff2a03, 0x198bf9c9, 0x748272d8,
  0xd0444872, 0xc980b4da, 0x8aa821ec, 0xdf238116, 0x4cbebf47, 0xcf4dd983,
  0x4e108798, 0x433b5455, 0xd1de2f95, 0xf662737e, 0x2042fd2a, 0xd8d002a4,
  0x4f2bfd11, 0x3a36ea78, 0x9b1c2302, 0x1c62b4f3, 0x862196, 0x3d77c3eb,
  0x2780a333, 0xf514d420, 0xf6544df1, 0xf7968912, 0xafc00196, 0x2ee2a2a2,
  0xc7d254a, 0xfb04c8e3, 0x7575bb46, 0xda08aca3, 0x1b9e2366, 0xba428c28,
  0xd783adb3, 0x91445552, 0xc50585c5, 0xcb6d15e6, 0x7a574575, 0x326cd038,
  0x2af7d0ca, 0xc2719837, 0x974a7be, 0x3644240b, 0x80206e90, 0x1e32cb2,
  0x3925c506, 0x66cc1d71, 0x2d9d4b56, 0x50250098, 0xad219f57, 0x52def263,
  0x4e34255f, 0xf91fa60e, 0xc935d798, 0x7a1d52d4, 0xc4802bce, 0xd3cd1d12,
  0xd82d12ff, 0x7f76ddc4, 0xe78d82e9, 0x551a7436, 0xaa4f8f34, 0xd302175e,
  0xe1640e97, 0xef1dc3c1, 0xbda57b37, 0x9d42c5f9, 0xe573ae59, 0xb1d9d983,
];
export default function ub98484234(
  ud22bbed1d6b0: any,
  ud22bbed1d6b1: any,
  ud22bbed1d6b2: any
) {
  var rk = [
    14, 34, 12, 13, 29, 39, 30, 19, 10, 14, 34, 12, 13, 29, 39, 30, 19, 10, 14,
    34, 12, 13, 29, 39, 30, 19, 10, 14, 34, 12, 13, 29, 39, 30, 19, 10, 14, 34,
    12, 13, 29, 39, 30, 19, 10, 14, 34, 12, 13, 29, 39, 30, 19, 10, 14, 34, 12,
    13, 29, 39, 30, 19, 10, 14, 34, 12, 13, 29, 39, 30, 19, 10, 14, 34, 12, 13,
    29, 39, 30, 19, 10, 14, 34, 12, 13, 29, 39, 30, 19, 10, 14, 34, 12, 13, 29,
    39, 30, 19, 10, 14, 34, 12, 13, 29, 39, 30, 19, 10, 14, 34, 12, 13, 29, 39,
    30, 19, 10, 14, 34, 12, 13, 29, 39, 30, 19, 10, 14, 34, 12, 13, 29, 39, 30,
    19, 10, 14, 34, 12, 13, 29, 39, 30, 19, 10, 14, 34, 12, 13, 29, 39, 30, 19,
    10, 14, 34, 12, 13, 29, 39, 30, 19, 10, 14, 34, 12, 13, 29, 39, 30, 19, 10,
    14, 34, 12, 13, 29, 39, 30, 19, 10, 14, 34, 12, 13, 29, 39, 30, 19, 10, 14,
    34, 12, 13, 29, 39, 30, 19, 10, 14, 34, 12, 13, 29, 39, 30, 19, 10,
  ];
  var k2 = [0x487ba49a, 0x7f136345];
  var lk = [0x487ba49a, 0x7f136345];
  var v = ud22bbed1d6b.slice(0);
  var k = [0xbd7375f8, 0xdfcfb71b, 0x3f7fed8e, 0xf7bb9631];
  for (var O = 0; O < 414; O++) {
    v[O] ^= 0x491c70a1;
  }
  v[1] ^= lk[1];
  v[0] ^= lk[0];
  v[3] ^= lk[1];
  v[2] = (v[2] >>> lk[0] % 16) | (v[2] << (32 - (lk[0] % 16)));
  v[5] -= lk[1];
  v[4] -= lk[0];
  v[7] -= lk[1];
  v[6] ^= lk[0];
  v[9] = (v[9] << lk[1] % 16) | (v[9] >>> (32 - (lk[1] % 16)));
  v[8] += lk[0];
  v[11] -= lk[1];
  v[10] ^= lk[0];
  v[13] = (v[13] << lk[1] % 16) | (v[13] >>> (32 - (lk[1] % 16)));
  v[12] ^= lk[0];
  v[15] = (v[15] << lk[1] % 16) | (v[15] >>> (32 - (lk[1] % 16)));
  v[14] -= lk[0];
  v[17] -= lk[1];
  v[16] -= lk[0];
  v[19] ^= lk[1];
  v[18] ^= lk[0];
  v[21] ^= lk[1];
  v[20] = (v[20] >>> lk[0] % 16) | (v[20] << (32 - (lk[0] % 16)));
  v[23] -= lk[1];
  v[22] -= lk[0];
  v[25] -= lk[1];
  v[24] ^= lk[0];
  v[27] = (v[27] << lk[1] % 16) | (v[27] >>> (32 - (lk[1] % 16)));
  v[26] += lk[0];
  v[29] -= lk[1];
  v[28] ^= lk[0];
  v[31] = (v[31] << lk[1] % 16) | (v[31] >>> (32 - (lk[1] % 16)));
  v[30] ^= lk[0];
  v[33] = (v[33] << lk[1] % 16) | (v[33] >>> (32 - (lk[1] % 16)));
  v[32] -= lk[0];
  v[35] -= lk[1];
  v[34] -= lk[0];
  v[37] ^= lk[1];
  v[36] ^= lk[0];
  v[39] ^= lk[1];
  v[38] = (v[38] >>> lk[0] % 16) | (v[38] << (32 - (lk[0] % 16)));
  v[41] -= lk[1];
  v[40] -= lk[0];
  v[43] -= lk[1];
  v[42] ^= lk[0];
  v[45] = (v[45] << lk[1] % 16) | (v[45] >>> (32 - (lk[1] % 16)));
  v[44] += lk[0];
  v[47] -= lk[1];
  v[46] ^= lk[0];
  v[49] = (v[49] << lk[1] % 16) | (v[49] >>> (32 - (lk[1] % 16)));
  v[48] ^= lk[0];
  v[51] = (v[51] << lk[1] % 16) | (v[51] >>> (32 - (lk[1] % 16)));
  v[50] -= lk[0];
  v[53] -= lk[1];
  v[52] -= lk[0];
  v[55] ^= lk[1];
  v[54] ^= lk[0];
  v[57] ^= lk[1];
  v[56] = (v[56] >>> lk[0] % 16) | (v[56] << (32 - (lk[0] % 16)));
  v[59] -= lk[1];
  v[58] -= lk[0];
  v[61] -= lk[1];
  v[60] ^= lk[0];
  v[63] = (v[63] << lk[1] % 16) | (v[63] >>> (32 - (lk[1] % 16)));
  v[62] += lk[0];
  v[65] -= lk[1];
  v[64] ^= lk[0];
  v[67] = (v[67] << lk[1] % 16) | (v[67] >>> (32 - (lk[1] % 16)));
  v[66] ^= lk[0];
  v[69] = (v[69] << lk[1] % 16) | (v[69] >>> (32 - (lk[1] % 16)));
  v[68] -= lk[0];
  v[71] -= lk[1];
  v[70] -= lk[0];
  v[73] ^= lk[1];
  v[72] ^= lk[0];
  v[75] ^= lk[1];
  v[74] = (v[74] >>> lk[0] % 16) | (v[74] << (32 - (lk[0] % 16)));
  v[77] -= lk[1];
  v[76] -= lk[0];
  v[79] -= lk[1];
  v[78] ^= lk[0];
  v[81] = (v[81] << lk[1] % 16) | (v[81] >>> (32 - (lk[1] % 16)));
  v[80] += lk[0];
  v[83] -= lk[1];
  v[82] ^= lk[0];
  v[85] = (v[85] << lk[1] % 16) | (v[85] >>> (32 - (lk[1] % 16)));
  v[84] ^= lk[0];
  v[87] = (v[87] << lk[1] % 16) | (v[87] >>> (32 - (lk[1] % 16)));
  v[86] -= lk[0];
  v[89] -= lk[1];
  v[88] -= lk[0];
  v[91] ^= lk[1];
  v[90] ^= lk[0];
  v[93] ^= lk[1];
  v[92] = (v[92] >>> lk[0] % 16) | (v[92] << (32 - (lk[0] % 16)));
  v[95] -= lk[1];
  v[94] -= lk[0];
  v[97] -= lk[1];
  v[96] ^= lk[0];
  v[99] = (v[99] << lk[1] % 16) | (v[99] >>> (32 - (lk[1] % 16)));
  v[98] += lk[0];
  v[101] -= lk[1];
  v[100] ^= lk[0];
  v[103] = (v[103] << lk[1] % 16) | (v[103] >>> (32 - (lk[1] % 16)));
  v[102] ^= lk[0];
  v[105] = (v[105] << lk[1] % 16) | (v[105] >>> (32 - (lk[1] % 16)));
  v[104] -= lk[0];
  v[107] -= lk[1];
  v[106] -= lk[0];
  v[109] ^= lk[1];
  v[108] ^= lk[0];
  v[111] ^= lk[1];
  v[110] = (v[110] >>> lk[0] % 16) | (v[110] << (32 - (lk[0] % 16)));
  v[113] -= lk[1];
  v[112] -= lk[0];
  v[115] -= lk[1];
  v[114] ^= lk[0];
  v[117] = (v[117] << lk[1] % 16) | (v[117] >>> (32 - (lk[1] % 16)));
  v[116] += lk[0];
  v[119] -= lk[1];
  v[118] ^= lk[0];
  v[121] = (v[121] << lk[1] % 16) | (v[121] >>> (32 - (lk[1] % 16)));
  v[120] ^= lk[0];
  v[123] = (v[123] << lk[1] % 16) | (v[123] >>> (32 - (lk[1] % 16)));
  v[122] -= lk[0];
  v[125] -= lk[1];
  v[124] -= lk[0];
  v[127] ^= lk[1];
  v[126] ^= lk[0];
  v[129] ^= lk[1];
  v[128] = (v[128] >>> lk[0] % 16) | (v[128] << (32 - (lk[0] % 16)));
  v[131] -= lk[1];
  v[130] -= lk[0];
  v[133] -= lk[1];
  v[132] ^= lk[0];
  v[135] = (v[135] << lk[1] % 16) | (v[135] >>> (32 - (lk[1] % 16)));
  v[134] += lk[0];
  v[137] -= lk[1];
  v[136] ^= lk[0];
  v[139] = (v[139] << lk[1] % 16) | (v[139] >>> (32 - (lk[1] % 16)));
  v[138] ^= lk[0];
  v[141] = (v[141] << lk[1] % 16) | (v[141] >>> (32 - (lk[1] % 16)));
  v[140] -= lk[0];
  v[143] -= lk[1];
  v[142] -= lk[0];
  v[145] ^= lk[1];
  v[144] ^= lk[0];
  v[147] ^= lk[1];
  v[146] = (v[146] >>> lk[0] % 16) | (v[146] << (32 - (lk[0] % 16)));
  v[149] -= lk[1];
  v[148] -= lk[0];
  v[151] -= lk[1];
  v[150] ^= lk[0];
  v[153] = (v[153] << lk[1] % 16) | (v[153] >>> (32 - (lk[1] % 16)));
  v[152] += lk[0];
  v[155] -= lk[1];
  v[154] ^= lk[0];
  v[157] = (v[157] << lk[1] % 16) | (v[157] >>> (32 - (lk[1] % 16)));
  v[156] ^= lk[0];
  v[159] = (v[159] << lk[1] % 16) | (v[159] >>> (32 - (lk[1] % 16)));
  v[158] -= lk[0];
  v[161] -= lk[1];
  v[160] -= lk[0];
  v[163] ^= lk[1];
  v[162] ^= lk[0];
  v[165] ^= lk[1];
  v[164] = (v[164] >>> lk[0] % 16) | (v[164] << (32 - (lk[0] % 16)));
  v[167] -= lk[1];
  v[166] -= lk[0];
  v[169] -= lk[1];
  v[168] ^= lk[0];
  v[171] = (v[171] << lk[1] % 16) | (v[171] >>> (32 - (lk[1] % 16)));
  v[170] += lk[0];
  v[173] -= lk[1];
  v[172] ^= lk[0];
  v[175] = (v[175] << lk[1] % 16) | (v[175] >>> (32 - (lk[1] % 16)));
  v[174] ^= lk[0];
  v[177] = (v[177] << lk[1] % 16) | (v[177] >>> (32 - (lk[1] % 16)));
  v[176] -= lk[0];
  v[179] -= lk[1];
  v[178] -= lk[0];
  v[181] ^= lk[1];
  v[180] ^= lk[0];
  v[183] ^= lk[1];
  v[182] = (v[182] >>> lk[0] % 16) | (v[182] << (32 - (lk[0] % 16)));
  v[185] -= lk[1];
  v[184] -= lk[0];
  v[187] -= lk[1];
  v[186] ^= lk[0];
  v[189] = (v[189] << lk[1] % 16) | (v[189] >>> (32 - (lk[1] % 16)));
  v[188] += lk[0];
  v[191] -= lk[1];
  v[190] ^= lk[0];
  v[193] = (v[193] << lk[1] % 16) | (v[193] >>> (32 - (lk[1] % 16)));
  v[192] ^= lk[0];
  v[195] = (v[195] << lk[1] % 16) | (v[195] >>> (32 - (lk[1] % 16)));
  v[194] -= lk[0];
  v[197] -= lk[1];
  v[196] -= lk[0];
  v[199] ^= lk[1];
  v[198] ^= lk[0];
  v[201] ^= lk[1];
  v[200] = (v[200] >>> lk[0] % 16) | (v[200] << (32 - (lk[0] % 16)));
  v[203] -= lk[1];
  v[202] -= lk[0];
  v[205] -= lk[1];
  v[204] ^= lk[0];
  v[207] = (v[207] << lk[1] % 16) | (v[207] >>> (32 - (lk[1] % 16)));
  v[206] += lk[0];
  v[209] -= lk[1];
  v[208] ^= lk[0];
  v[211] = (v[211] << lk[1] % 16) | (v[211] >>> (32 - (lk[1] % 16)));
  v[210] ^= lk[0];
  v[213] = (v[213] << lk[1] % 16) | (v[213] >>> (32 - (lk[1] % 16)));
  v[212] -= lk[0];
  v[215] -= lk[1];
  v[214] -= lk[0];
  v[217] ^= lk[1];
  v[216] ^= lk[0];
  v[219] ^= lk[1];
  v[218] = (v[218] >>> lk[0] % 16) | (v[218] << (32 - (lk[0] % 16)));
  v[221] -= lk[1];
  v[220] -= lk[0];
  v[223] -= lk[1];
  v[222] ^= lk[0];
  v[225] = (v[225] << lk[1] % 16) | (v[225] >>> (32 - (lk[1] % 16)));
  v[224] += lk[0];
  v[227] -= lk[1];
  v[226] ^= lk[0];
  v[229] = (v[229] << lk[1] % 16) | (v[229] >>> (32 - (lk[1] % 16)));
  v[228] ^= lk[0];
  v[231] = (v[231] << lk[1] % 16) | (v[231] >>> (32 - (lk[1] % 16)));
  v[230] -= lk[0];
  v[233] -= lk[1];
  v[232] -= lk[0];
  v[235] ^= lk[1];
  v[234] ^= lk[0];
  v[237] ^= lk[1];
  v[236] = (v[236] >>> lk[0] % 16) | (v[236] << (32 - (lk[0] % 16)));
  v[239] -= lk[1];
  v[238] -= lk[0];
  v[241] -= lk[1];
  v[240] ^= lk[0];
  v[243] = (v[243] << lk[1] % 16) | (v[243] >>> (32 - (lk[1] % 16)));
  v[242] += lk[0];
  v[245] -= lk[1];
  v[244] ^= lk[0];
  v[247] = (v[247] << lk[1] % 16) | (v[247] >>> (32 - (lk[1] % 16)));
  v[246] ^= lk[0];
  v[249] = (v[249] << lk[1] % 16) | (v[249] >>> (32 - (lk[1] % 16)));
  v[248] -= lk[0];
  v[251] -= lk[1];
  v[250] -= lk[0];
  v[253] ^= lk[1];
  v[252] ^= lk[0];
  v[255] ^= lk[1];
  v[254] = (v[254] >>> lk[0] % 16) | (v[254] << (32 - (lk[0] % 16)));
  v[257] -= lk[1];
  v[256] -= lk[0];
  v[259] -= lk[1];
  v[258] ^= lk[0];
  v[261] = (v[261] << lk[1] % 16) | (v[261] >>> (32 - (lk[1] % 16)));
  v[260] += lk[0];
  v[263] -= lk[1];
  v[262] ^= lk[0];
  v[265] = (v[265] << lk[1] % 16) | (v[265] >>> (32 - (lk[1] % 16)));
  v[264] ^= lk[0];
  v[267] = (v[267] << lk[1] % 16) | (v[267] >>> (32 - (lk[1] % 16)));
  v[266] -= lk[0];
  v[269] -= lk[1];
  v[268] -= lk[0];
  v[271] ^= lk[1];
  v[270] ^= lk[0];
  v[273] ^= lk[1];
  v[272] = (v[272] >>> lk[0] % 16) | (v[272] << (32 - (lk[0] % 16)));
  v[275] -= lk[1];
  v[274] -= lk[0];
  v[277] -= lk[1];
  v[276] ^= lk[0];
  v[279] = (v[279] << lk[1] % 16) | (v[279] >>> (32 - (lk[1] % 16)));
  v[278] += lk[0];
  v[281] -= lk[1];
  v[280] ^= lk[0];
  v[283] = (v[283] << lk[1] % 16) | (v[283] >>> (32 - (lk[1] % 16)));
  v[282] ^= lk[0];
  v[285] = (v[285] << lk[1] % 16) | (v[285] >>> (32 - (lk[1] % 16)));
  v[284] -= lk[0];
  v[287] -= lk[1];
  v[286] -= lk[0];
  v[289] ^= lk[1];
  v[288] ^= lk[0];
  v[291] ^= lk[1];
  v[290] = (v[290] >>> lk[0] % 16) | (v[290] << (32 - (lk[0] % 16)));
  v[293] -= lk[1];
  v[292] -= lk[0];
  v[295] -= lk[1];
  v[294] ^= lk[0];
  v[297] = (v[297] << lk[1] % 16) | (v[297] >>> (32 - (lk[1] % 16)));
  v[296] += lk[0];
  v[299] -= lk[1];
  v[298] ^= lk[0];
  v[301] = (v[301] << lk[1] % 16) | (v[301] >>> (32 - (lk[1] % 16)));
  v[300] ^= lk[0];
  v[303] = (v[303] << lk[1] % 16) | (v[303] >>> (32 - (lk[1] % 16)));
  v[302] -= lk[0];
  v[305] -= lk[1];
  v[304] -= lk[0];
  v[307] ^= lk[1];
  v[306] ^= lk[0];
  v[309] ^= lk[1];
  v[308] = (v[308] >>> lk[0] % 16) | (v[308] << (32 - (lk[0] % 16)));
  v[311] -= lk[1];
  v[310] -= lk[0];
  v[313] -= lk[1];
  v[312] ^= lk[0];
  v[315] = (v[315] << lk[1] % 16) | (v[315] >>> (32 - (lk[1] % 16)));
  v[314] += lk[0];
  v[317] -= lk[1];
  v[316] ^= lk[0];
  v[319] = (v[319] << lk[1] % 16) | (v[319] >>> (32 - (lk[1] % 16)));
  v[318] ^= lk[0];
  v[321] = (v[321] << lk[1] % 16) | (v[321] >>> (32 - (lk[1] % 16)));
  v[320] -= lk[0];
  v[323] -= lk[1];
  v[322] -= lk[0];
  v[325] ^= lk[1];
  v[324] ^= lk[0];
  v[327] ^= lk[1];
  v[326] = (v[326] >>> lk[0] % 16) | (v[326] << (32 - (lk[0] % 16)));
  v[329] -= lk[1];
  v[328] -= lk[0];
  v[331] -= lk[1];
  v[330] ^= lk[0];
  v[333] = (v[333] << lk[1] % 16) | (v[333] >>> (32 - (lk[1] % 16)));
  v[332] += lk[0];
  v[335] -= lk[1];
  v[334] ^= lk[0];
  v[337] = (v[337] << lk[1] % 16) | (v[337] >>> (32 - (lk[1] % 16)));
  v[336] ^= lk[0];
  v[339] = (v[339] << lk[1] % 16) | (v[339] >>> (32 - (lk[1] % 16)));
  v[338] -= lk[0];
  v[341] -= lk[1];
  v[340] -= lk[0];
  v[343] ^= lk[1];
  v[342] ^= lk[0];
  v[345] ^= lk[1];
  v[344] = (v[344] >>> lk[0] % 16) | (v[344] << (32 - (lk[0] % 16)));
  v[347] -= lk[1];
  v[346] -= lk[0];
  v[349] -= lk[1];
  v[348] ^= lk[0];
  v[351] = (v[351] << lk[1] % 16) | (v[351] >>> (32 - (lk[1] % 16)));
  v[350] += lk[0];
  v[353] -= lk[1];
  v[352] ^= lk[0];
  v[355] = (v[355] << lk[1] % 16) | (v[355] >>> (32 - (lk[1] % 16)));
  v[354] ^= lk[0];
  v[357] = (v[357] << lk[1] % 16) | (v[357] >>> (32 - (lk[1] % 16)));
  v[356] -= lk[0];
  v[359] -= lk[1];
  v[358] -= lk[0];
  v[361] ^= lk[1];
  v[360] ^= lk[0];
  v[363] ^= lk[1];
  v[362] = (v[362] >>> lk[0] % 16) | (v[362] << (32 - (lk[0] % 16)));
  v[365] -= lk[1];
  v[364] -= lk[0];
  v[367] -= lk[1];
  v[366] ^= lk[0];
  v[369] = (v[369] << lk[1] % 16) | (v[369] >>> (32 - (lk[1] % 16)));
  v[368] += lk[0];
  v[371] -= lk[1];
  v[370] ^= lk[0];
  v[373] = (v[373] << lk[1] % 16) | (v[373] >>> (32 - (lk[1] % 16)));
  v[372] ^= lk[0];
  v[375] = (v[375] << lk[1] % 16) | (v[375] >>> (32 - (lk[1] % 16)));
  v[374] -= lk[0];
  v[377] -= lk[1];
  v[376] -= lk[0];
  v[379] ^= lk[1];
  v[378] ^= lk[0];
  v[381] ^= lk[1];
  v[380] = (v[380] >>> lk[0] % 16) | (v[380] << (32 - (lk[0] % 16)));
  v[383] -= lk[1];
  v[382] -= lk[0];
  v[385] -= lk[1];
  v[384] ^= lk[0];
  v[387] = (v[387] << lk[1] % 16) | (v[387] >>> (32 - (lk[1] % 16)));
  v[386] += lk[0];
  v[389] -= lk[1];
  v[388] ^= lk[0];
  v[391] = (v[391] << lk[1] % 16) | (v[391] >>> (32 - (lk[1] % 16)));
  v[390] ^= lk[0];
  v[393] = (v[393] << lk[1] % 16) | (v[393] >>> (32 - (lk[1] % 16)));
  v[392] -= lk[0];
  v[395] -= lk[1];
  v[394] -= lk[0];
  v[397] ^= lk[1];
  v[396] ^= lk[0];
  v[399] ^= lk[1];
  v[398] = (v[398] >>> lk[0] % 16) | (v[398] << (32 - (lk[0] % 16)));
  v[401] -= lk[1];
  v[400] -= lk[0];
  v[403] -= lk[1];
  v[402] ^= lk[0];
  v[405] = (v[405] << lk[1] % 16) | (v[405] >>> (32 - (lk[1] % 16)));
  v[404] += lk[0];
  v[407] -= lk[1];
  v[406] ^= lk[0];
  v[409] = (v[409] << lk[1] % 16) | (v[409] >>> (32 - (lk[1] % 16)));
  v[408] ^= lk[0];
  v[411] = (v[411] << lk[1] % 16) | (v[411] >>> (32 - (lk[1] % 16)));
  v[410] -= lk[0];
  v[413] -= lk[1];
  v[412] -= lk[0];
  for (var I = 0; I < 414; I += 2) {
    var i,
      v0 = v[I] ^ k2[0],
      v1 = v[I + 1] ^ k2[1],
      d = 0x9e3779b9,
      sum = d * rk[I / 2];
    for (i = 0; i < rk[I / 2]; i++) {
      v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]);
      sum -= d;
      v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]);
    }
    v[I] = v0 ^ k2[1];
    v[I + 1] = v1 ^ k2[0];
  }
  for (var O = 413; O > 0; O--) {
    v[O] ^= v[O - 1];
  }
  v[0] ^= 0x491c70a1;
  var strc = "";
  for (var i = 0; i < v.length; i++) {
    strc += String.fromCharCode(
      v[i] & 0xff,
      (v[i] >>> 8) & 0xff,
      (v[i] >>> 16) & 0xff,
      (v[i] >>> 24) & 0xff
    );
  }
  return eval(strc)(ud22bbed1d6b0, ud22bbed1d6b1, ud22bbed1d6b2);
}
